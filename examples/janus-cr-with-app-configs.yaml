apiVersion: janus-idp.io/v1alpha1
kind: Backstage
metadata:
  name: my-backstage-app-with-app-config
spec:
  backstage:
    appConfig:
      #mountPath:  /opt/app-root/src
      items:
        - configMapRef:
            name: "my-backstage-config-cm1"
        - secretRef:
            name: "my-backstage-config-secret1"
    dynamicPlugins:
      configMapRef:
        name: my-dynamic-plugins-config-cm
    env:
      - name: MY_ENV_VAR_1
        value: my-value-1
      - name: MY_ENV_VAR_2
        value: my-value-2
    envFrom:
      - configMapRef:
          name: my-env-cm-1
      - secretRef:
          name: my-env-secret1
    backendAuthSecretRef:
      name: "my-backstage-backend-auth-secret"
      key: "my-auth-key"
    replicas: 2
    extraConfig:
      mountPath: /tmp/my-extra-files
      items:
        - configMapRef:
            name: "my-backstage-extra-config-cm1"
        - secretRef:
            name: "my-backstage-extra-config-secret1"

---
apiVersion: v1
kind: Secret
metadata:
  name: my-backstage-backend-auth-secret
data:
  # generated with the command below (from https://janus-idp.io/docs/auth/service-to-service-auth/#setup):
  # node -p 'require("crypto").randomBytes(24).toString("base64")'
  backend-secret: TDRORDFRa2JxaFJhNTBzOGFDc1FWUEJ4ekFtRUw4UEU=
  my-auth-key: TDRORDFRa2JxaFJhNTBzOGFDc1FWUEJ4ekFtRUw4UEU=

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-backstage-config-cm1
data:
  my-app-config.prod.yaml: |
    backend:
      database:
        connection:
          password: ${POSTGRESQL_PASSWORD}
          user: ${POSTGRESQL_USER}
  my-app-config-2.yaml: |
    # Some comment in this file
  my-app-config.odo.yaml: |
    catalog:
      locations:
        # [...]
        - type: url
          target: https://github.com/rm3l/odo-backstage-golden-path-template/blob/main/template.yaml
          rules:
            - allow: [Template]

---
apiVersion: v1
kind: Secret
metadata:
  name: my-backstage-config-secret1
stringData:
  my-app-config-1.secret.yaml: |
    auth:
      # see https://backstage.io/docs/auth/ to learn about auth providers
      environment: development
      providers:
        github:
          development:
            clientId: '${MY_ENV_VAR_1}'
            clientSecret: '${MY_ENV_VAR_2}'
  # # a comment
  my-app-config-2.secret.yaml: |
    # a comment

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-dynamic-plugins-config-cm
data:
  dynamic-plugins.yaml: |
    includes:
      - dynamic-plugins.default.yaml
    plugins:
      - package: '@dfatwork-pkgs/scaffolder-backend-module-http-request-wrapped-dynamic@4.0.9-0'
        integrity: 'sha512-+YYESzHdg1hsk2XN+zrtXPnsQnfbzmWIvcOM0oQLS4hf8F4iGTtOXKjWnZsR/14/khGsPrzy0oq1ytJ1/4ORkQ=='
      - package: '@dfatwork-pkgs/explore-backend-wrapped-dynamic@0.0.9-next.11'
        integrity: 'sha512-/qUxjSedxQ0dmYqMWsZ2+OLGeovaaigRRrX1aTOz0GJMwSjOAauUUD1bMs56VPX74qWL1rf3Xr4nViiKo8rlIA=='
        pluginConfig:
          proxy:
            endpoints:
              /explore-backend-completed:
                target: 'http://localhost:7017'

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-env-cm-1
data:
  CM_ENV1: "cm env 1"
  CM_ENV2: "cm env 2"

---
apiVersion: v1
kind: Secret
metadata:
  name: my-env-secret1
stringData:
  SEC_ENV1: "secret env 1"
  SEC_ENV2: "secret env 2"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-backstage-extra-config-cm1
data:
  cm_file1.txt: |
    # From ConfigMap
    Lorem Ipsum
    Dolor Sit Amet
  cm_file2.properties: |
    conf.x=y
    conf.y=z

---
apiVersion: v1
kind: Secret
metadata:
  name: my-backstage-extra-config-secret1
stringData:
  secret_file1.txt: |
    # From Secret
    Lorem Ipsum
    Dolor Sit Amet
  secret_file2.properties: |
    sec.a=b
    sec.b=c
  secrets.prod.yaml: |
    appId: 1
    webhookUrl: https://smee.io/foo
    clientId: someGithubAppClientId
    clientSecret: someGithubAppClientSecret
    webhookSecret: someWebhookSecret
    privateKey: |
      SomeRsaPrivateKey
